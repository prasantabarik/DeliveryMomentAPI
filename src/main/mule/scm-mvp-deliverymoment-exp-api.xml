<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
    
    <http:request-config name="DeliveryMomentCRUDEndpoint" doc:name="HTTP Request configuration" doc:id="fb12d311-10e4-460f-9bab-19b24639bc12" >
		<http:request-connection host="deliverymomentcrud-edppublic-deliverymomentcrud-dev.59ae6b648ca3437aae3a.westeurope.aksapp.io" />
	</http:request-config>
	<http:request-config name="DeliveryMomentAKSEndpoint" doc:name="HTTP Request configuration" doc:id="1f56018c-aa44-49ee-b87e-ae19ae35bd37" >
		<http:request-connection host="delmoreqhandler-edppublic-delmoreqhandler-dev.59ae6b648ca3437aae3a.westeurope.aksapp.io" />
	</http:request-config>
	<flow name="scm-mvp-deliverymoment-exp-api-main">
        <http:listener config-ref="scm-mvp-deliverymoment-exp-api-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="scm-mvp-deliverymoment-exp-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
if(error.description contains("deliveryDateFrom"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "DeliveryDateFrom is not valid. yyyy-mm-dd is the correct date format"
}
else if(error.description contains("deliveryDateTo"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "DeliveryDateTo is not valid. yyyy-mm-dd is the correct date format"
	
}
else if(error.description contains("orderDateFrom"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "OrderDateFrom is not valid. yyyy-mm-dd is the correct date format"
	
}
else if(error.description contains("orderDateTo"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "OrderDateTo is not valid. yyyy-mm-dd is the correct date format"
	
}
else if(error.description contains("fillDateFrom"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "FillDateFrom is not valid. yyyy-mm-dd is the correct date format"
	
}
else if(error.description contains("fillDateTo"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "FillDateTo is not valid. yyyy-mm-dd is the correct date format"
	
}
else if(error.description contains("startFillTimeFrom"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "StartFillTimeFrom is not valid. yyyy-mm-dd is the correct date format"
	
}
else if(error.description contains("startFillTimeTo"))
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": "StartFillTimeTo is not valid. yyyy-mm-dd is the correct date format"
	
}
else
{
	"responseCode": "404",
    "responseDescription": "Failure",
    "response": error.description
}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="scm-mvp-deliverymoment-exp-api-console">
        <http:listener config-ref="scm-mvp-deliverymoment-exp-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="scm-mvp-deliverymoment-exp-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="put:\deliveryMoment:application\json:scm-mvp-deliverymoment-exp-api-config">
        <logger level="INFO" doc:name="Put DeliveryMoment Flow -Start" doc:id="ced3c841-d5de-44e1-951d-b565cbe3cdb2" message="Flow #[flow.name] started"/>
		<logger level="INFO" doc:name="Log RequestPayload" doc:id="e090525a-3675-40cc-8de6-8bff167e069f" message="Log Put DeliveryMoment RequestPayload :: #[payload]"/>
		<http:request method="PUT" doc:name="Call PutDeliveryMoment Microservice" doc:id="4a875a7f-4e8f-4eef-b65b-0d1d5e1f6406" responseTimeout="${http-request-timeout}" path="/api/v1/deliverymomenthandler/model" config-ref="DeliveryMomentAKSEndpoint"/>
		<logger level="INFO" doc:name="Log ResponsePayload" doc:id="4a59a84e-300b-4ded-82aa-b95956037d37" message="Log Put DeliveryMoment ResponsePayload :: #[payload]"/>
		<logger level="INFO" doc:name="Put DeliveryMoment Flow - end" doc:id="6665efc0-389b-44fc-aa34-18f59ee77119" message="Flow #[flow.name] ended"/>
    </flow>
    <flow name="delete:\deliveryMoment:application\json:scm-mvp-deliverymoment-exp-api-config">
        <logger level="INFO" doc:name="Delete DeliveryMoment Flow - Start" doc:id="ee5ac633-687a-4497-9c0e-22935e4203c1" message="Flow #[flow.name] started"/>
		<logger level="INFO" doc:name="Log RequestPayload" doc:id="c14720a0-4e5b-4da4-84a2-a02f68ff0e84" message="Log Delete DeliveryMoment RequestPayload :: #[payload]"/>
		<http:request method="DELETE" doc:name="Call Delete DeliveryMoment Microservice" doc:id="75ffdcff-f421-4b3f-95f5-f6969313e8b9" responseTimeout="${http-request-timeout}" path="/api/v1/deliverymomenthandler/model/{id}" config-ref="DeliveryMomentAKSEndpoint">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	'id' : payload.id
}]]]></http:uri-params>
		</http:request>
		<logger level="INFO" doc:name="Log ResponsePayload" doc:id="bcfe8169-8aaf-4293-8023-1e7d845cf9da" message="Log Delete DeliveryMoment ResponsePayload :: #[payload]"/>
		<logger level="INFO" doc:name="Delete DeliveryMoment Flow - End" doc:id="170f466a-31cf-4fd9-91e5-ef20104f84ed" message="Flow #[flow.name] ended"/>
    </flow>
    <flow name="get:\healthCheck:scm-mvp-deliverymoment-exp-api-config">
		<ee:transform doc:name="Transform Message" doc:id="b22a89bb-8add-423d-9551-88185d13c0bf" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"error-code": null,
	"message": "Ok"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" message="Log HealthCheck Message :: #[payload]" />
    </flow>
    <flow name="get:\deliveryMoment:scm-mvp-deliverymoment-exp-api-config">
        <logger level="INFO" doc:name="Get DeliveryMoment Flow - Start" doc:id="3e820f52-e3fd-41ef-96ec-79280a963f60" message="Flow #[flow.name] started"/>
		<logger level="INFO" doc:name="Log RequestPayload" doc:id="2131e1b9-d719-4a39-9dd3-36dc96abffc0" message="Log Get DeliveryMoment RequestPayload :: #[payload]"/>
		<http:request method="GET" doc:name="Call Get DeliveryMoment Microservice" doc:id="1a1dfb2f-5d80-44dc-8e33-1da154868e41" responseTimeout="${http-request-timeout}" path="/api/v1/deliverymomenthandler/model" config-ref="DeliveryMomentAKSEndpoint">
			<http:query-params ><![CDATA[#[output application/java
---
{
	('storeNumber': attributes.queryParams.storeNumber)if((attributes.queryParams.storeNumber?)and (!isEmpty(attributes.queryParams.storeNumber))),
	('deliveryStreamNumber': attributes.queryParams.deliveryStreamNumber)if((attributes.queryParams.deliveryStreamNumber?)and (!isEmpty(attributes.queryParams.deliveryStreamNumber))),
	('deliveryStreamName': attributes.queryParams.deliveryStreamName)if((attributes.queryParams.deliveryStreamName?)and (!isEmpty(attributes.queryParams.deliveryStreamName))),
	('schemaName': attributes.queryParams.schemaName)if((attributes.queryParams.schemaName?)and (!isEmpty(attributes.queryParams.schemaName))),
	('deliveryDateFrom': attributes.queryParams.deliveryDateFrom)if((attributes.queryParams.deliveryDateFrom?)and (!isEmpty(attributes.queryParams.deliveryDateFrom))),
	('deliveryDateTo': attributes.queryParams.deliveryDateTo)if((attributes.queryParams.deliveryDateTo?)and (!isEmpty(attributes.queryParams.deliveryDateTo))),
	('orderDateFrom': attributes.queryParams.orderDateFrom)if((attributes.queryParams.orderDateFrom?)and (!isEmpty(attributes.queryParams.orderDateFrom))),
	('orderDateTo': attributes.queryParams.orderDateTo)if((attributes.queryParams.orderDateTo?)and (!isEmpty(attributes.queryParams.orderDateTo))),
	('fillDateFrom': attributes.queryParams.fillDateFrom)if((attributes.queryParams.fillDateFrom?)and (!isEmpty(attributes.queryParams.fillDateFrom))),
	('fillDateTo': attributes.queryParams.fillDateTo)if((attributes.queryParams.fillDateTo?)and (!isEmpty(attributes.queryParams.fillDateTo))),
	('startFillTimeFrom': attributes.queryParams.startFillTimeFrom)if((attributes.queryParams.startFillTimeFrom?)and (!isEmpty(attributes.queryParams.startFillTimeFrom))),
	('startFillTimeTo': attributes.queryParams.startFillTimeTo)if((attributes.queryParams.startFillTimeTo?)and (!isEmpty(attributes.queryParams.startFillTimeTo)))
	
}]]]></http:query-params>
		</http:request>
		<logger level="INFO" doc:name="Log ResponsePayload" doc:id="045efdb0-5529-4c9c-9761-2c564e1aaff9" message="Log Get DeliveryMoment ResponsePayload :: #[payload]"/>
		<logger level="INFO" doc:name="Get DeliveryMoment Flow - end" doc:id="d9f2c30e-5ad1-4387-9db8-87d6c446fc05" message="Flow #[flow.name] ended"/>
    </flow>
    <flow name="post:\deliveryMoment:application\json:scm-mvp-deliverymoment-exp-api-config">
        <logger level="INFO" doc:name="Post DeliveryMoment Flow - Start" doc:id="7f3d99fd-6868-48c7-8522-cc77ff21e012" message="Flow #[flow.name] started"/>
		<logger level="INFO" doc:name="Log RequestPayload" doc:id="41017041-7da5-4a60-adcb-e9ad783aa238" message="Log Post DeliveryMoment RequestPayload :: #[payload]"/>
		<http:request method="POST" doc:name="Call Post DeliveryMoment Microservice" doc:id="64d88290-4b2e-4820-9935-6b1e473ddbbb" responseTimeout="${http-request-timeout}" path="/api/v1/deliverymomenthandler/model" config-ref="DeliveryMomentAKSEndpoint"/>
		<logger level="INFO" doc:name="Log ResponsePayload" doc:id="eb5cd5fb-cf0f-49c3-bf4c-5379e266078c" message="Log Post DeliveryMoment ResponsePayload :: #[payload]"/>
		<logger level="INFO" doc:name="Post DeliveryMoment Flow - end" doc:id="c3f05cb5-2fad-414b-bd32-ef7ccd5cc2bc" message="Flow #[flow.name] ended"/>
    </flow>
    <flow name="post:\getDeliveryMoment:application\json:scm-mvp-deliverymoment-exp-api-config">
        <logger level="INFO" doc:name="Post GetDeliveryMoment Flow - Start" doc:id="0e631b3b-cfcd-4cf1-b3a0-4410d4b60d76" message="Flow #[flow.name] started"/>
		<logger level="INFO" doc:name="Log RequestPayload" doc:id="c844d413-91bf-4c36-ac4c-509d49a812de" message="Log Get DeliveryMomentData RequestPayload :: #[payload]"/>
		<http:request method="GET" doc:name="Call Get DeliveryMoment Microservice" doc:id="8781bd6d-793f-4efa-878d-d2a4265e6886" responseTimeout="${http-request-timeout}" path="/api/v1/deliverymomenthandler/model" config-ref="DeliveryMomentAKSEndpoint">
			<http:query-params ><![CDATA[#[output application/java
---
{
	('storeNumber': payload.storeNumber)if((payload.storeNumber?)and (!isEmpty(payload.storeNumber))),
	('deliveryStreamNumber': payload.deliveryStreamNumber)if((payload.deliveryStreamNumber?)and (!isEmpty(payload.deliveryStreamNumber))),
	('deliveryStreamName': payload.deliveryStreamName)if((payload.deliveryStreamName?)and (!isEmpty(payload.deliveryStreamName))),
	('schemaName': payload.schemaName)if((payload.schemaName?)and (!isEmpty(payload.schemaName))),
	('deliveryDateFrom': payload.deliveryDateFrom)if((payload.deliveryDateFrom?)and (!isEmpty(payload.deliveryDateFrom))),
	('deliveryDateTo': payload.deliveryDateTo)if((payload.deliveryDateTo?)and (!isEmpty(payload.deliveryDateTo))),
	('orderDateFrom': payload.orderDateFrom)if((payload.orderDateFrom?)and (!isEmpty(payload.orderDateFrom))),
	('orderDateTo': payload.orderDateTo)if((payload.orderDateTo?)and (!isEmpty(payload.orderDateTo))),
	('fillDateFrom': payload.fillDateFrom)if((payload.fillDateFrom?)and (!isEmpty(payload.fillDateFrom))),
	('fillDateTo': payload.fillDateTo)if((payload.fillDateTo?)and (!isEmpty(payload.fillDateTo))),
	('startFillTimeFrom': payload.startFillTimeFrom)if((payload.startFillTimeFrom?)and (!isEmpty(payload.startFillTimeFrom))),
	('startFillTimeTo': payload.startFillTimeTo)if((payload.startFillTimeTo?)and (!isEmpty(payload.startFillTimeTo)))
	
}]]]></http:query-params>
		</http:request>
		<logger level="INFO" doc:name="Log ResponsePayload" doc:id="077c199e-8d14-46d5-abd1-dcb8c7fd0a38" message="Log Get DeliveryMomentData ResponsePayload :: #[payload]"/>
		<logger level="INFO" doc:name="Post GetDeliveryMoment Flow - end" doc:id="3ad80a53-a692-4596-bdd8-0f9624d36ba9" message="Flow #[flow.name] ended"/>
    </flow>
</mule>
    
